# read in counts data
counts_data <- read.csv(file = "datasets/deseq2/counts_data.csv")
View(counts_data)
# read in counts data
counts_data <- read.csv(file = "datasets/deseq2/GSE273142_Processed_data.csv")
library(GEOquery)
gse <- getGEO(GEO = "GSE273142", GSEMatrix = TRUE)
metadata <- pData(phenoData(gse[[1]]))   #dim(metadata)
view(metadata)
dim(counts_data)
names(counts_data)
rownames(metadata)
counts_data <- counts_data %>%
rename(GSM8422516 = JG.27250_S1.rsem.genes.results) %>%
rename(GSM8422517 = JG.27251_S2.rsem.genes.results) %>%
rename(GSM8422518 = JG.27255_S6.rsem.genes.results) %>%
rename(GSM8422519 = JG.27256_S7.rsem.genes.results) %>%
rename(GSM8422520 = JG.27260_S11.rsem.genes.results) %>%
rename(GSM8422521 = JG.27261_S12.rsem.genes.results) %>%
counts_data <- counts_data %>%
rename(GSM8422516 = JG.27250_S1.rsem.genes.results) %>%
rename(GSM8422517 = JG.27251_S2.rsem.genes.results) %>%
rename(GSM8422518 = JG.27255_S6.rsem.genes.results) %>%
rename(GSM8422519 = JG.27256_S7.rsem.genes.results) %>%
rename(GSM8422520 = JG.27260_S11.rsem.genes.results) %>%
rename(GSM8422521 = JG.27261_S12.rsem.genes.results)
counts_data
counts_data %>%
rename(GSM8422516 = JG.27250_S1.rsem.genes.results) %>%
rename(GSM8422517 = JG.27251_S2.rsem.genes.results) %>%
rename(GSM8422518 = JG.27255_S6.rsem.genes.results) %>%
rename(GSM8422519 = JG.27256_S7.rsem.genes.results) %>%
rename(GSM8422520 = JG.27260_S11.rsem.genes.results) %>%
rename(GSM8422521 = JG.27261_S12.rsem.genes.results) %?%
head()
# read in counts data
counts_data <- read.csv(file = "datasets/deseq2/GSE273142_Processed_data.csv")
counts_data %>%
rename(GSM8422516 = JG.27250_S1.rsem.genes.results) %>%
rename(GSM8422517 = JG.27251_S2.rsem.genes.results) %>%
rename(GSM8422518 = JG.27255_S6.rsem.genes.results) %>%
rename(GSM8422519 = JG.27256_S7.rsem.genes.results) %>%
rename(GSM8422520 = JG.27260_S11.rsem.genes.results) %>%
rename(GSM8422521 = JG.27261_S12.rsem.genes.results) %?%
head()
# importing libraries to R script
library(tidyverse)
library(DESeq2)
library(ggplot2)
library(dplyr)
library(GEOquery)
library(dplyr)
# importing libraries to R script
library(tidyverse)
library(DESeq2)
library(ggplot2)
library(dplyr)
library(GEOquery)
library(tidyverse)
library(dplyr)
counts_data %>%
rename(GSM8422516 = JG.27250_S1.rsem.genes.results) %>%
rename(GSM8422517 = JG.27251_S2.rsem.genes.results) %>%
rename(GSM8422518 = JG.27255_S6.rsem.genes.results) %>%
rename(GSM8422519 = JG.27256_S7.rsem.genes.results) %>%
rename(GSM8422520 = JG.27260_S11.rsem.genes.results) %>%
rename(GSM8422521 = JG.27261_S12.rsem.genes.results) %?%
head()
counts_data %>%
rename(GSM8422516 = JG.27250_S1.rsem.genes.results) %>%
rename(GSM8422517 = JG.27251_S2.rsem.genes.results) %>%
rename(GSM8422518 = JG.27255_S6.rsem.genes.results) %>%
rename(GSM8422519 = JG.27256_S7.rsem.genes.results) %>%
rename(GSM8422520 = JG.27260_S11.rsem.genes.results) %>%
rename(GSM8422521 = JG.27261_S12.rsem.genes.results) %>%
head()
head(counts_data)
counts_data %>%
rename(GSM8422516 = JG.27250_S1.rsem.genes.results) %>%
head()
counts_data %>%
select(1,2,3,4,5,6,7) %>%
rename(GSM8422516 = JG.27250_S1.rsem.genes.results) %>%
rename(GSM8422517 = JG.27251_S2.rsem.genes.results) %>%
rename(GSM8422518 = JG.27255_S6.rsem.genes.results) %>%
rename(GSM8422519 = JG.27256_S7.rsem.genes.results) %>%
rename(GSM8422520 = JG.27260_S11.rsem.genes.results) %>%
rename(GSM8422521 = JG.27261_S12.rsem.genes.results) %>%
head()
# read in counts data
counts_data <- read.csv(file = "datasets/deseq2/GSE273142_Processed_data.csv")
counts_data %>%
select(1,2,3,4,5,6,7) %>%
rename(GSM8422516 = JG.27250_S1.rsem.genes.results) %>%
rename(GSM8422517 = JG.27251_S2.rsem.genes.results) %>%
rename(GSM8422518 = JG.27255_S6.rsem.genes.results) %>%
rename(GSM8422519 = JG.27256_S7.rsem.genes.results) %>%
rename(GSM8422520 = JG.27260_S11.rsem.genes.results) %>%
rename(GSM8422521 = JG.27261_S12.rsem.genes.results) %>%
head()
metadata
metadata %>%
select(1,10,11,17) %>%
rename(tissue = characteristics_ch1) %>%
rename(metastasis = characteristics_ch1.1) %>%
mutate(tissue = gsub("tissue: ", "", tissue)) %>%
mutate(metastasis = gsub("metastasis: ", "", metastasis)) %>%
head()
# read in counts data
counts_data <- read.csv(file = "datasets/deseq2/GSE273142_Processed_data.csv")
# read in counts data
counts_data <- read.csv(file = "datasets/deseq2/GSE273142_Processed_data.csv")
View(counts_data)
counts_data %>%
select(1,2,3,4,5,6,7) %>%
rename(GSM8422516 = JG.27250_S1.rsem.genes.results) %>%
rename(GSM8422517 = JG.27251_S2.rsem.genes.results) %>%
rename(GSM8422518 = JG.27255_S6.rsem.genes.results) %>%
rename(GSM8422519 = JG.27256_S7.rsem.genes.results) %>%
rename(GSM8422520 = JG.27260_S11.rsem.genes.results) %>%
rename(GSM8422521 = JG.27261_S12.rsem.genes.results) %>%
head()
# importing libraries to R script
library(tidyverse)
library(DESeq2)
library(ggplot2)
library(dplyr)
library(GEOquery)
library(tidyverse)
library(dplyr)
library(dplyr)
library(dplyr)
counts_data %>%
select(1,2,3,4,5,6,7) %>%
dplyr::rename(GSM8422516 = JG.27250_S1.rsem.genes.results) %>%
head()
counts_data <- counts_data %>%
select(1,2,3,4,5,6,7) %>%
dplyr::rename(GSM8422516 = JG.27250_S1.rsem.genes.results) %>%
dplyr::rename(GSM8422517 = JG.27251_S2.rsem.genes.results) %>%
dplyr::rename(GSM8422518 = JG.27255_S6.rsem.genes.results) %>%
dplyr::rename(GSM8422519 = JG.27256_S7.rsem.genes.results) %>%
dplyr::rename(GSM8422520 = JG.27260_S11.rsem.genes.results) %>%
dplyr::rename(GSM8422521 = JG.27261_S12.rsem.genes.results)
counts_data
# read in counts data
counts_data <- read.csv(file = "datasets/deseq2/GSE273142_Processed_data.csv")
counts_data <- counts_data %>%
dplyr::rename(GSM8422516 = JG.27250_S1.rsem.genes.results) %>%
dplyr::rename(GSM8422517 = JG.27251_S2.rsem.genes.results) %>%
dplyr::rename(GSM8422518 = JG.27255_S6.rsem.genes.results) %>%
dplyr::rename(GSM8422519 = JG.27256_S7.rsem.genes.results) %>%
dplyr::rename(GSM8422520 = JG.27260_S11.rsem.genes.results) %>%
dplyr::rename(GSM8422521 = JG.27261_S12.rsem.genes.results)
rownames(counts_data) <- counts_data[,X]
rownames(counts_data) <- counts_data[,1]
counts_data <- counts_data[,-1]
colData <- read.csv(file = "datasets/deseq2/sample_info.csv")
View(counts_data)
View(colData)
metadata %>%
select(1,12)
metadata %>%
dplyr::select(1,12)
metadata %>%
tidyverse::select(1,12)
metadata %>%
dplyr::select(1,12)
metadata %>%
select(1,12)
metadata %>%
select(1,12) %>%
head()
metadata %>%
select(1,12) %>%
dplyr::head()
metadata %>%
select(1,12) %>%
tidyverse::head()
head(metadata)
library(tidyverse)
library(GEOquery)
library(dplyr)
# read in counts data
counts_data <- read.csv(file = "datasets/deseq2/GSE273142_Processed_data.csv")
View(counts_data)
counts_data %>%
rename(GSM8422516 = JG.27250_S1.rsem.genes.results) %>%
dplyr::rename(GSM8422517 = JG.27251_S2.rsem.genes.results) %>%
dplyr::rename(GSM8422518 = JG.27255_S6.rsem.genes.results) %>%
dplyr::rename(GSM8422519 = JG.27256_S7.rsem.genes.results) %>%
dplyr::rename(GSM8422520 = JG.27260_S11.rsem.genes.results) %>%
dplyr::rename(GSM8422521 = JG.27261_S12.rsem.genes.results)
counts_data <- counts_data %>%
rename(GSM8422516 = JG.27250_S1.rsem.genes.results) %>%
rename(GSM8422517 = JG.27251_S2.rsem.genes.results) %>%
rename(GSM8422518 = JG.27255_S6.rsem.genes.results) %>%
rename(GSM8422519 = JG.27256_S7.rsem.genes.results) %>%
rename(GSM8422520 = JG.27260_S11.rsem.genes.results) %>%
rename(GSM8422521 = JG.27261_S12.rsem.genes.results)
rownames(counts_data) <- counts_data[,1]
counts_data <- counts_data[,-1]
gse <- getGEO(GEO = "GSE273142", GSEMatrix = TRUE)
metadata <- pData(phenoData(gse[[1]]))   #dim(metadata)
head(metadata)
View(metadata)
metadata %>%
select(1,12) %>%
# read in sample info
colData <- read.csv(file = "datasets/deseq2/sample_info.csv")
metadata %>%
select(1,12)
# read in sample info
colData <- read.csv(file = "datasets/deseq2/sample_info.csv")
View(counts_data)
View(colData)
View(colData)
metadata %>%
select(12) %>%
rename(condition = characteristics_ch1.2) %>%
mutate(condition = gsub("genotype: ", "", condition))
mutate(condition = gsub(" ", "_", condition))
metadata %>%
select(12) %>%
rename(condition = characteristics_ch1.2) %>%
mutate(condition = gsub("genotype: ", "", condition)) %>%
mutate(condition = gsub(" ", "_", condition))
colData <- metadata %>%
select(12) %>%
rename(condition = characteristics_ch1.2) %>%
mutate(condition = gsub("genotype: ", "", condition)) %>%
mutate(condition = gsub(" ", "_", condition))
View(colData)
# making sure the row names in colData matches to column names in Counts_data
all(colnames(counts_data) %in% rownames(colData))
all(colnames(counts_data) == rownames(colData))
# Construct a DESeq Dataset Object
dds <- DESeqDataSetFromMatrix(
countData = counts_data,
colData = colData,
design = ~ condition
)
library(DESeq2)
# Construct a DESeq Dataset Object
dds <- DESeqDataSetFromMatrix(
countData = counts_data,
colData = colData,
design = ~ condition
)
# read in counts data
counts_data <- read.csv(file = "datasets/deseq2/GSE273142_Processed_data.tab")
View(counts_data)
# read in counts data
counts_data <- read.table(file = "datasets/deseq2/GSE273142_Processed_data.tab")
View(counts_data)
counts_data <- counts_data %>%
rename(GSM8422516 = JG.27250_S1.rsem.genes.results) %>%
rename(GSM8422517 = JG.27251_S2.rsem.genes.results) %>%
rename(GSM8422518 = JG.27255_S6.rsem.genes.results) %>%
rename(GSM8422519 = JG.27256_S7.rsem.genes.results) %>%
rename(GSM8422520 = JG.27260_S11.rsem.genes.results) %>%
rename(GSM8422521 = JG.27261_S12.rsem.genes.results)
library(GEOquery)
library(dplyr)
# importing libraries to R script
library(tidyverse)
# read in counts data
counts_data <- read.table(file = "datasets/deseq2/GSE273142_Processed_data.tab")
View(counts_data)
counts_data <- counts_data %>%
rename(GSM8422516 = JG.27250_S1.rsem.genes.results) %>%
rename(GSM8422517 = JG.27251_S2.rsem.genes.results) %>%
rename(GSM8422518 = JG.27255_S6.rsem.genes.results) %>%
rename(GSM8422519 = JG.27256_S7.rsem.genes.results) %>%
rename(GSM8422520 = JG.27260_S11.rsem.genes.results) %>%
rename(GSM8422521 = JG.27261_S12.rsem.genes.results)
View(counts_data)
rownames(counts_data) <- counts_data[,1]
View(counts_data)
# read in counts data
counts_data <- read.table(file = "datasets/deseq2/GSE273142_Processed_data.tab")
counts_data <- counts_data %>%
rename(GSM8422516 = JG.27250_S1.rsem.genes.results) %>%
rename(GSM8422517 = JG.27251_S2.rsem.genes.results) %>%
rename(GSM8422518 = JG.27255_S6.rsem.genes.results) %>%
rename(GSM8422519 = JG.27256_S7.rsem.genes.results) %>%
rename(GSM8422520 = JG.27260_S11.rsem.genes.results) %>%
rename(GSM8422521 = JG.27261_S12.rsem.genes.results)
View(counts_data)
gse <- getGEO(GEO = "GSE273142", GSEMatrix = TRUE)
metadata <- pData(phenoData(gse[[1]]))   #dim(metadata)
colData <- metadata %>%
select(12) %>%
rename(condition = characteristics_ch1.2) %>%
mutate(condition = gsub("genotype: ", "", condition)) %>%
mutate(condition = gsub(" ", "_", condition))
View(colData)
# making sure the row names in colData matches to column names in Counts_data
all(colnames(counts_data) %in% rownames(colData))
all(colnames(counts_data) == rownames(colData))
# Construct a DESeq Dataset Object
dds <- DESeqDataSetFromMatrix(
countData = counts_data,
colData = colData,
design = ~ condition
)
library(DESeq2)
# Construct a DESeq Dataset Object
dds <- DESeqDataSetFromMatrix(
countData = counts_data,
colData = colData,
design = ~ condition
)
# Construct a DESeq Dataset Object
dds <- DESeqDataSetFromMatrix(
countData = round(counts_data),
colData = colData,
design = ~ condition
)
# pre-filtering : removing rows with low gene count
# keeping rows that have atleast 10 reads total
keep <- rowSums(counts(dds)) >= 10
dds <- dds[keep,]
# set the factor level
dds$condition <- factor(dds$condition, levels = c("DAPK3_WT", "DAPK3_KO"))
dds
# run DESeq : perform statistical test to identify the differentially expressed genes
dds <- DESeq(dds)
deseq_result <- results(dds)
# explore result
# default resut with with p-value < 0.1
deseq_result
# explore result
# default resut with with p-value < 0.1
deseq_result
# Result as dataframe of R
deseq_result <- as.data.frame(deseq_result)
head(deseq_result)
# re-order by p-value
deseq_result_reordered <- deseq_result[order(deseq_result$pvalue),]
head(deseq_result_reordered)
deseq_result[ENSG00000035664_DAPK2,]
deseq_result[ENSG00000035664_DAPK2]
# read in counts data
counts_data <- read.table(file = "datasets/deseq2/GSE273142_Processed_data.tab")
# importing libraries to R script
library(tidyverse)
library(dplyr)
library(GEOquery)
# read in counts data
counts_data <- read.table(file = "datasets/deseq2/GSE273142_Processed_data.tab")
counts_data <- counts_data %>%
rename(GSM8422516 = JG.27250_S1.rsem.genes.results) %>%
rename(GSM8422517 = JG.27251_S2.rsem.genes.results) %>%
rename(GSM8422518 = JG.27255_S6.rsem.genes.results) %>%
rename(GSM8422519 = JG.27256_S7.rsem.genes.results) %>%
rename(GSM8422520 = JG.27260_S11.rsem.genes.results) %>%
rename(GSM8422521 = JG.27261_S12.rsem.genes.results)
gse <- getGEO(GEO = "GSE273142", GSEMatrix = TRUE)
metadata <- pData(phenoData(gse[[1]]))   #dim(metadata)
colData <- metadata %>%
select(12) %>%
rename(condition = characteristics_ch1.2) %>%
mutate(condition = gsub("genotype: ", "", condition)) %>%
mutate(condition = gsub(" ", "_", condition))
# making sure the row names in colData matches to column names in Counts_data
all(colnames(counts_data) %in% rownames(colData))
all(colnames(counts_data) == rownames(colData))
# Construct a DESeq Dataset Object
dds <- DESeqDataSetFromMatrix(
countData = round(counts_data),
colData = colData,
design = ~ condition
)
# pre-filtering : removing rows with low gene count
# keeping rows that have atleast 10 reads total
keep <- rowSums(counts(dds)) >= 10
library(DESeq2)
library(ggplot2)
library(DESeq2)
library(ggplot2)
library(dplyr)
library(GEOquery)
# Construct a DESeq Dataset Object
dds <- DESeqDataSetFromMatrix(
countData = round(counts_data),
colData = colData,
design = ~ condition
)
# pre-filtering : removing rows with low gene count
# keeping rows that have atleast 10 reads total
keep <- rowSums(counts(dds)) >= 10
dds <- dds[keep,]
# set the factor level
dds$condition <- factor(dds$condition, levels = c("DAPK3_WT", "DAPK3_KO"))
View(colData)
# run DESeq : perform statistical test to identify the differentially expressed genes
dds <- DESeq(dds)
deseq_result <- results(dds)
# explore result
# default resut with with p-value < 0.1
deseq_result
summary(deseq_result)
deseq_result <- results(dds, alpha = 0.01)
summary(deseq_result)
deseq_result_data["ENSG00000167657_DAPK3",]
deseq_result <- results(dds)
# explore result
# default resut with with p-value < 0.1
deseq_result
summary(deseq_result)
# Result as dataframe of R
deseq_result_data <- as.data.frame(deseq_result)
head(deseq_result_data)
# re-order by p-value
deseq_result_reordered <- deseq_result_data[order(deseq_result_data$pvalue),]
head(deseq_result_reordered)
deseq_result_data["ENSG00000167657_DAPK3",]
# constrasts
resultsNames(dds)
results(dds, constrast = c("DAPK3_WT", "DAPK3_KO"))
# read in counts data
counts_data <- read.table(file = "datasets/deseq2/GSE273142_Processed_data.tab")
counts_data <- counts_data %>%
rename(GSM8422516 = JG.27250_S1.rsem.genes.results) %>%
rename(GSM8422517 = JG.27251_S2.rsem.genes.results) %>%
rename(GSM8422518 = JG.27255_S6.rsem.genes.results) %>%
rename(GSM8422519 = JG.27256_S7.rsem.genes.results) %>%
rename(GSM8422520 = JG.27260_S11.rsem.genes.results) %>%
rename(GSM8422521 = JG.27261_S12.rsem.genes.results)
gse <- getGEO(GEO = "GSE273142", GSEMatrix = TRUE)
metadata <- pData(phenoData(gse[[1]]))   #dim(metadata)
colData <- metadata %>%
select(12) %>%
rename(condition = characteristics_ch1.2) %>%
mutate(condition = gsub("genotype: ", "", condition)) %>%
mutate(condition = gsub(" ", "_", condition))
# making sure the row names in colData matches to column names in Counts_data
all(colnames(counts_data) %in% rownames(colData))
all(colnames(counts_data) == rownames(colData))
# import dataset
data <- read.csv(file = "output/pea/enr_analysis_result.csv")
# For data management
install.packages('tidyverse')
BiocManager::install("clusterProfiler")
# importing libraries to R script
library(tidyverse) # includes ggplot2, for data visualisation. dplyr, for data manipulation.
library(RColorBrewer) # for a colourful plot
library(dplyr)
library(clusterProfiler) # for PEA analysis
library('org.Hs.eg.db')
library(DOSE)
library(enrichplot) # for visualisations
library(ggupset) # for visualisations
View(data)
# import dataset
res_df <- read.csv(file = "output/pea/enr_analysis_result.csv")
bg_genes <- readRDS(output/pea/msigdb_Hs.RDS')
bg_genes <- readRDS('output/pea/msigdb_Hs.RDS')
bg_genes <- readRDS("output/pea/msigdb_Hs.RDS")
View(bg_genes)
# Convert clusterProfiler object to a new "enrichResult" object
# Select only upregulated genes in Severe
res_df <- res_df %>%
filter(diffexpressed == 'UP') %>%
dplyr::select(!c('minuslog10padj', 'diffexpressed'))
View(res_df)
# Convert clusterProfiler object to a new "enrichResult" object
# Select only upregulated genes in Severe
res_df <- res_df %>%
filter(diffexp == 'healthy') %>%
dplyr::select(!c('minuslog10padj', 'diffexp'))
# import dataset
res_df <- read.csv(file = "output/pea/enr_analysis_result.csv")
# Convert clusterProfiler object to a new "enrichResult" object
# Select only upregulated genes in Severe
res_df <- res_df %>%
filter(diffexp == 'Healthy') %>%
dplyr::select(!c('minuslog10padj', 'diffexp'))
rownames(res_df) <- res_df$ID
View(bg_genes)
# importing dataset
deseq.result <- read.csv(file = "datasets/pea/GSE247894.csv")
# summarizing the data
deseq.result <- deseq.result %>%
dplyr::select(2,5,6,7) %>%
dplyr::rename(log2fc = log2FoldChange) %>%
dplyr::rename(gene = GeneName)
enrichres <- new("enrichResult",
readable = FALSE,
result = res_df,
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
qvalueCutoff = 0.2,
organism = "human",
ontology = "UNKNOWN",
gene = deseq.result$gene,
keytype = "UNKNOWN",
universe = unique(bg_genes$gene),
gene2Symbol = character(0),
geneSets = bg_genes)
class(enrichres)
# Barplot
barplot(enrichres, showCategory = 20)
mutate(enrichres, qscore = -log(p.adjust, base = 10)) %>%
barplot(x = "qscore")
# Barplot
barplot(enrichres, showCategory = 20)
mutate(enrichres, qscore = -log(p.adjust, base = 10)) %>%
barplot(x = "qscore")
# Barplot
barplot(enrichres, showCategory = 20)
